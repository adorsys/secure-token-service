openapi: 3.0.1
info:
  title: Secure-Token-Service
  version: "1"
servers:
  - url: http://localhost:8885
    description: Generated server url
tags:
  - name: Proof of Possession RFC7800
    description: Public key distribution endpoint
paths:
  /:
    post:
      tags:
        - Token Exchange
      summary: Exchange Token
      description: Create an access or refresh token given a valide subject token.
      operationId: tokenExchange
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenExchangeForm'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Bad request
          headers:
            error:
              description: invalid request
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
  /pop:
    get:
      tags:
        - Proof of Possession RFC7800
      summary: Read server public keys
      description: Fetches public keys of the target server. Keys are used to encrypt data sent to the server and also send a response encryption key to the server. See RFC7800
      operationId: getPublicKeys
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    TokenExchangeForm:
      required:
        - grant_type
        - subject_token
        - subject_token_type
      type: object
      properties:
        grant_type:
          type: string
          description: Indicates that a token exchange is being performed.
        resource:
          type: array
          description: Indicates the physical location of the target service or resource where the client intends to use the requested security token.  This enables the authorization server to apply policy as appropriate for the target, such as determining the type and content of the token to be issued or if and how the token is to be encrypted.
          items:
            type: string
        audience:
          type: array
          description: The logical name of the target service where the client intends to use the requested security token.  This serves a purpose similar to the resource parameter, but with the client providing a logical name rather than a physical location.
          items:
            type: string
        scope:
          type: string
          description: A list of space-delimited, case-sensitive strings that allow the client to specify the desired scope of the requested security token in the context of the service or resource where the token will be used.
        requested_token_type:
          type: string
          description: An identifier for the type of the requested security token.  If the requested type is unspecified, the issued token type is at the discretion of the authorization server and may be dictated by knowledge of the requirements of the service or resource indicated by the resource or audience parameter. This can be urn:ietf:params:oauth:token-type:jwt or urn:ietf:params:oauth:token-type:saml.
        subject_token:
          type: string
          description: A security token that represents the identity of the party on behalf of whom the request is being made.  Typically, the subject of this token will be the subject of the security token issued in response to this request.
        subject_token_type:
          type: string
          description: An identifier for the type of the requested security token.  If the requested type is unspecified, the issued token type is at the discretion of the authorization server and may be dictated by knowledge of the requirements of the service or resource indicated by the resource or audience parameter. This can be urn:ietf:params:oauth:token-type:jwt or urn:ietf:params:oauth:token-type:saml. This can be urn:ietf:params:oauth:token-type:access_token or urn:ietf:params:oauth:token-type:refresh_token.
        actor_token:
          type: string
          description: A security token that represents the identity of the acting party.  Typically this will be the party that is authorized to use the requested security token and act on behalf of the subject.
        actor_token_type:
          type: string
          description: An identifier for the type of the requested security token.  If the requested type is unspecified, the issued token type is at the discretion of the authorization server and may be dictated by knowledge of the requirements of the service or resource indicated by the resource or audience parameter. This can be urn:ietf:params:oauth:token-type:jwt or urn:ietf:params:oauth:token-type:saml. This can be urn:ietf:params:oauth:token-type:access_token or urn:ietf:params:oauth:token-type:refresh_token.

    TokenResponse:
      required:
        - access_token
        - issued_token_type
        - refresh_token
        - token_type
      type: object
      properties:
        access_token:
          type: string
          description: The security token issued by the authorization server in response to the token exchange request.
          example: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJNYXhNdXN0ZXJtYW4iLCJyb2xlIjoiVVNFUiIsImV4cCI6MTQ5NTM5MTAxM30.mN9eFMnEuYgh_KCULI8Gpm1X49wWaA67Ps1M7EFV0BQ
        issued_token_type:
          type: string
          description: An identifier for the representation of the issued security token. Can be urn:ietf:params:oauth:token-type:access_token or urn:ietf:params:oauth:token-type:refresh_token
          example: urn:ietf:params:oauth:token-type:access_token
        token_type:
          type: string
          description: It provides the client with information about how to utilize the access token to access protected resources.  For example, a value of Bearer
          example: Bearer
        expires_in:
          type: integer
          description: The validity lifetime, in seconds, of the token issued by the authorization server. For example, the value 1800 denotes that the token will expire in thirty minutes from the time the response was generated.
          format: int32
          example: 1800
        scope:
          type: string
          description: OPTIONAL, if the scope of the issued security token is identical to the scope requested by the client; otherwise, REQUIRED.
          example: user banking
        refresh_token:
          type: string
          description: The security token issued by the authorization server in response to the token exchange request. In this case the issued_token_type wil be urn:ietf:params:oauth:token-type:refresh_token.
          example: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJNYXhNdXN0ZXJtYW4iLCJyb2xlIjoiVVNFUiIsImV4cCI6MTQ5NTM5MTAxM30.mN9eFMnEuYgh_KCULI8Gpm1X49wWaA67Ps1M7EFV0BQ
      description: Carries the response of a token request
